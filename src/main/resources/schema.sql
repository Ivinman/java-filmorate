DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS friends CASCADE;
DROP TABLE IF EXISTS films CASCADE;
DROP TABLE IF EXISTS film_likes CASCADE;
DROP TABLE IF EXISTS mpa CASCADE;
DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;


CREATE TABLE IF NOT EXISTS users (
user_id integer  GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
email varchar NOT NULL,
login varchar NOT NULL,
name varchar,
birthday varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS friends (
request_sender_id integer REFERENCES users (user_id),
request_recivier_id integer,
request_is_accept boolean DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS films (
film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
name varchar NOT NULL,
description varchar,
mpa integer ,
release_date varchar ,
duration integer ,
likes integer
);

CREATE TABLE IF NOT EXISTS film_likes (
film_id integer REFERENCES films (film_id),
user_id integer REFERENCES users (user_id)
);

CREATE TABLE IF NOT EXISTS mpa (
mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
mpa_name varchar
);

ALTER TABLE films ADD CONSTRAINT mpa_to_mpa FOREIGN KEY (mpa) REFERENCES mpa(mpa_id);

INSERT INTO mpa (mpa_name) VALUES ('G'), ('PG'), ('PG-13'), ('R'), ('NC-17');

CREATE TABLE IF NOT EXISTS genres (
genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
genre_name varchar
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id integer REFERENCES films(film_id),
genre_id integer REFERENCES genres(genre_id)
);

INSERT INTO genres (genre_name) VALUES ('Комедия'), ('Драма'), ('Мультфильм'), ('Триллер'), ('Документальный'), ('Боевик');